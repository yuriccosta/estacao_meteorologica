#ifndef HTML_DATA_H
#define HTML_DATA_H

const char *html_data =
"<!DOCTYPE html>"
"<html lang='pt-BR'>"
"<head>"
"<meta charset='UTF-8'>"
"<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
"<title>Estação Meteorológica</title>"
"<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css'>"
"<script src='https://cdn.jsdelivr.net/npm/apexcharts'></script>"
"<style>"
"body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,sans-serif;background-color:#0d1117;color:#c9d1d9;margin:0;padding:10px;}"
".container{width:100%;max-width:900px;margin:0 auto;}"
"header{text-align:center;margin-bottom:20px;}h1{font-size:1.5rem;color:#58a6ff;margin:0;}p{margin:4px 0 0;color:#8b949e;}"
".dashboard{display:flex;flex-wrap:wrap;gap:15px;align-items:stretch;}"
".panel{background-color:#161b22;border:1px solid #30363d;border-radius:6px;padding:15px;flex:1 1 100%;display:flex;flex-direction:column;}"
"@media (min-width:768px){.panel{flex:1 1 45%;}}"
".panel-title{font-size:1.1rem;color:#58a6ff;margin:0 0 15px 0;border-bottom:1px solid #30363d;padding-bottom:10px;display:flex;align-items:center;gap:8px;}"
".readings-panel-content{display:flex;flex-direction:column;justify-content:space-around;flex-grow:1;}"
".sensor-group{margin-bottom:15px;}.sensor-group:last-child{margin-bottom:0;}.sensor-group-title{font-size:0.9rem;color:#8b949e;margin-bottom:10px;}"
".readings-grid{display:flex;flex-wrap:wrap;gap:10px;}"
".reading-card{background-color:#0d1117;padding:10px 15px;border-radius:6px;flex:1 1 120px;display:flex;align-items:center;gap:10px;}"
".reading-card .icon{font-size:1.5rem;color:#58a6ff;}.reading-card .reading-text{text-align:left;}.reading-card .label{font-size:0.8rem;color:#8b949e;}.reading-card .value{font-size:1.2rem;font-weight:600;color:#c9d1d9;}"
"#settingsForm{display:flex;flex-direction:column;flex-grow:1;}.form-content{flex-grow:1;}.form-section{margin-bottom:15px;}.form-section-title{font-size:1rem;color:#c9d1d9;margin-bottom:8px;}"
".input-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(80px,1fr));gap:30px;}.input-grid label{font-size:0.75rem;color:#8b949e;}.input-grid input{display:block;width:100%;margin-top:4px;background-color:#010409;border:1px solid #30363d;color:#c9d1d9;border-radius:6px;padding:5px;font-size:0.9rem;}"
".btn-submit{width:100%;background-color:#238636;color:#ffffff;border:1px solid #2ea043;padding:10px;font-size:1rem;border-radius:6px;cursor:pointer;margin-top:15px;display:flex;align-items:center;justify-content:center;gap:8px;}"
"#notification{text-align:center;padding:8px;border-radius:6px;margin-top:10px;font-weight:600;display:none;}#notification.success{background-color:#238636;}#notification.error{background-color:#da3633;}"
".chart-panel{width:100%;}.chart-container{min-height:250px;}"
".last-update{font-size:0.8rem;color:#8b949e;text-align:center;margin-top:20px;}"
"</style>"
"</head>"
"<body>"
"<div class='container'>"
"<header><h1>Estação Meteorológica</h1><p>Monitoramento Leve para Pico W</p></header>"
"<div class='dashboard'>"
"<div class='panel'>"
"<h2 class='panel-title'>Leituras Atuais</h2>"
"<div class='readings-panel-content'>"
"<div class='sensor-group'><p class='sensor-group-title'>Sensor 1 (AHT10)</p>"
"<div class='readings-grid'>"
"<div class='reading-card'><i class='fas fa-thermometer-half icon'></i><div class='reading-text'><p class='label'>Temperatura</p><p class='value' id='s1_temp'>-- °C</p></div></div>"
"<div class='reading-card'><i class='fas fa-tint icon'></i><div class='reading-text'><p class='label'>Umidade</p><p class='value' id='s1_humidity'>-- %</p></div></div>"
"</div></div>"
"<div class='sensor-group'><p class='sensor-group-title'>Sensor 2 (BMP280)</p>"
"<div class='readings-grid'>"
"<div class='reading-card'><i class='fas fa-thermometer-half icon'></i><div class='reading-text'><p class='label'>Temperatura</p><p class='value' id='s2_temp'>-- °C</p></div></div>"
"<div class='reading-card'><i class='fas fa-tachometer-alt icon'></i><div class='reading-text'><p class='label'>Pressão</p><p class='value' id='s2_pressure'>-- hPa</p></div></div>"
"</div></div>"
"</div>"
"</div>"
"<div class='panel'>"
"<h2 class='panel-title'>Configurações</h2>"
"<form id='settingsForm'>"
"<div class='form-content'>"
"<div class='form-section'><p class='form-section-title'>Temperatura (°C)</p><div class='input-grid'><label>Mínimo<input type='number' id='temp_min' step='any'></label><label>Máximo<input type='number' id='temp_max' step='any'></label><label>Offset<input type='number' id='temp_offset' step='any'></label></div></div>"
"<div class='form-section'><p class='form-section-title'>Umidade (%)</p><div class='input-grid'><label>Mínimo<input type='number' id='humidity_min' step='any'></label><label>Máximo<input type='number' id='humidity_max' step='any'></label><label>Offset<input type='number' id='humidity_offset' step='any'></label></div></div>"
"<div class='form-section'><p class='form-section-title'>Pressão (hPa)</p><div class='input-grid'><label>Mínimo<input type='number' id='pressure_min' step='any'></label><label>Máximo<input type='number' id='pressure_max' step='any'></label><label>Offset<input type='number' id='pressure_offset' step='any'></label></div></div>"
"</div>"
"<button type='submit' class='btn-submit'>Salvar</button>"
"<div id='notification'></div>"
"</form>"
"</div>"
"<div class='panel chart-panel'><h2 class='panel-title'>Histórico de Temperatura</h2><div id='tempChart' class='chart-container'></div></div>"
"<div class='panel chart-panel'><h2 class='panel-title'>Histórico de Umidade</h2><div id='humidityChart' class='chart-container'></div></div>"
"<div class='panel chart-panel'><h2 class='panel-title'>Histórico de Pressão</h2><div id='pressureChart' class='chart-container'></div></div>"
"</div>"
"<p class='last-update' id='timestamp'>Aguardando dados...</p>"
"</div>"
"<script>"
"document.addEventListener('DOMContentLoaded',()=>{"
"const settingsForm=document.getElementById('settingsForm');"
"const notification=document.getElementById('notification');"
"let isUserEditingForm=false;"
"let tempChart,humidityChart,pressureChart;"
"const MAX_DATA_POINTS=150;"
"const chartData={temp_s1:[],temp_s2:[],humidity_s1:[],pressure_s2:[]};"
"function createChart(selector,options){const chart=new ApexCharts(document.querySelector(selector),options);chart.render();return chart;}"
"function initCharts(){"
"const commonOptions={chart:{height:250,type:'line',animations:{enabled:true,easing:'linear',dynamicAnimation:{speed:1000}},toolbar:{show:false},zoom:{enabled:false}},stroke:{curve:'smooth',width:2},theme:{mode:'dark'},tooltip:{theme:'dark',x:{format:'HH:mm:ss'}},xaxis:{type:'datetime',range:MAX_DATA_POINTS*5000,labels:{style:{colors:'#8b949e'},datetimeUTC:false,formatter:function(value){return new Date(value).toLocaleTimeString('pt-BR');}}},grid:{borderColor:'#30363d'},legend:{labels:{colors:'#c9d1d9'}}};"
"tempChart=createChart('#tempChart',{...commonOptions,series:[{name:'Temp S1 (°C)',data:[]},{name:'Temp S2 (°C)',data:[]}],yaxis:{title:{text:'°C',style:{color:'#8b949e'}},labels:{style:{colors:'#8b949e'}}}});"
"humidityChart=createChart('#humidityChart',{...commonOptions,series:[{name:'Umidade S1 (%)',data:[]}],yaxis:{min:0,max:100,title:{text:'%',style:{color:'#8b949e'}},labels:{style:{colors:'#8b949e'}}}});"
"pressureChart=createChart('#pressureChart',{...commonOptions,series:[{name:'Pressão S2 (hPa)',data:[]}],yaxis:{title:{text:'hPa',style:{color:'#8b949e'}},labels:{style:{colors:'#8b949e'}}}});"
"}"
"function updateCharts(data){"
"const timestamp=new Date().getTime();"
"const pushData=(series,value)=>{series.push([timestamp,value]);if(series.length>MAX_DATA_POINTS)series.shift();};"
"pushData(chartData.temp_s1,getSafeNumber(data.aht10_temp));"
"pushData(chartData.temp_s2,getSafeNumber(data.bmp280_temp));"
"pushData(chartData.humidity_s1,getSafeNumber(data.aht10_humidity));"
"pushData(chartData.pressure_s2,getSafeNumber(data.bmp280_pressure));"
"tempChart.updateSeries([{data:chartData.temp_s1},{data:chartData.temp_s2}]);"
"humidityChart.updateSeries([{data:chartData.humidity_s1}]);"
"pressureChart.updateSeries([{data:chartData.pressure_s2}]);"
"}"
"const getSafeNumber=(val)=>(typeof val==='number'&&!isNaN(val))?val:0;"
"function updateReadings(data){"
"document.getElementById('s1_temp').textContent=`${getSafeNumber(data.aht10_temp).toFixed(1)} °C`;"
"document.getElementById('s1_humidity').textContent=`${getSafeNumber(data.aht10_humidity).toFixed(1)} %`;"
"document.getElementById('s2_temp').textContent=`${getSafeNumber(data.bmp280_temp).toFixed(1)} °C`;"
"document.getElementById('s2_pressure').textContent=`${getSafeNumber(data.bmp280_pressure).toFixed(0)} hPa`;"
"}"
"function updateForm(config){"
"document.getElementById('temp_min').value=getSafeNumber(config.temp_min);"
"document.getElementById('temp_max').value=getSafeNumber(config.temp_max);"
"document.getElementById('temp_offset').value=getSafeNumber(config.temp_offset);"
"document.getElementById('humidity_min').value=getSafeNumber(config.humidity_min);"
"document.getElementById('humidity_max').value=getSafeNumber(config.humidity_max);"
"document.getElementById('humidity_offset').value=getSafeNumber(config.humidity_offset);"
"document.getElementById('pressure_min').value=getSafeNumber(config.pressure_min);"
"document.getElementById('pressure_max').value=getSafeNumber(config.pressure_max);"
"document.getElementById('pressure_offset').value=getSafeNumber(config.pressure_offset);"
"}"
"function showNotification(message,type){"
"notification.textContent=message;"
"notification.className=type;"
"notification.style.display='block';"
"setTimeout(()=>{notification.style.display='none';},2000);"
"}"
"async function fetchData(){"
"try{"
"const response=await fetch('/estado');"
"if(!response.ok)throw new Error(`Erro de rede: ${response.status}`);"
"const data=await response.json();"
"if(typeof data!=='object'||data===null)throw new Error('Formato de dados inválido.');"
"updateReadings(data);"
"updateCharts(data);"
"if(!isUserEditingForm){updateForm(data);}"
"document.getElementById('timestamp').textContent='Atualizado em: '+new Date().toLocaleTimeString();"
"}catch(error){console.error('Falha ao buscar dados:',error);document.getElementById('timestamp').textContent='Erro de conexão. Tentando...';}"
"}"
"async function handleFormSubmit(event){"
"event.preventDefault();"
"const getVal=(id)=>parseFloat(document.getElementById(id).value)||0;"
"const formData={"
"temp_min:getVal('temp_min'),temp_max:getVal('temp_max'),temp_offset:getVal('temp_offset'),"
"humidity_min:getVal('humidity_min'),humidity_max:getVal('humidity_max'),humidity_offset:getVal('humidity_offset'),"
"pressure_min:getVal('pressure_min'),pressure_max:getVal('pressure_max'),pressure_offset:getVal('pressure_offset')"
"};"
"try{"
"const response=await fetch('/limites',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});"
"if(response.ok){showNotification('Salvo!','success');isUserEditingForm=false;await fetchData();}"
"else{throw new Error(`Erro ao salvar: ${response.status}`);}"
"}catch(error){console.error('Falha ao enviar formulário:',error);showNotification('Falha!','error');}"
"}"
"const formInputs=settingsForm.querySelectorAll('input');"
"formInputs.forEach(input=>{input.addEventListener('focus',()=>{isUserEditingForm=true;});input.addEventListener('blur',()=>{isUserEditingForm=false;});});"
"initCharts();"
"settingsForm.addEventListener('submit',handleFormSubmit);"
"fetchData();"
"setInterval(fetchData,5000);"
"});"
"</script>"
"</body>"
"</html>";

#endif // HTML_DATA_H